#!/usr/bin/env node
"use strict";var T=Object.create;var d=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var N=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),O=(e,r)=>{for(var o in r)d(e,o,{get:r[o],enumerable:!0})},w=(e,r,o,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of $(r))!M.call(e,t)&&t!==o&&d(e,t,{get:()=>r[t],enumerable:!(n=R(r,t))||n.enumerable});return e};var f=(e,r,o)=>(o=e!=null?T(F(e)):{},w(r||!e||!e.__esModule?d(o,"default",{value:e,enumerable:!0}):o,e)),S=e=>w(d({},"__esModule",{value:!0}),e);var j=N((ne,z)=>{z.exports={name:"@weichwarenprojekt/license-reporter",version:"1.0.0",description:"A tool that analyzes node modules and extracts the license information into a json file that can be used for rendering the third party software.",scripts:{build:"node esbuild.js && tsc --emitDeclarationOnly",cli:"ts-node src/index.ts",bundledCli:"node dist/license-reporter.js",test:"npm run build && jest",coverage:"npm run build && jest --coverage",prepublishOnly:"npm run build"},bin:"./dist/license-reporter.js",main:"./dist/license-reporter.js",types:"./dist/index.d.ts",repository:{type:"git",url:"git+https://github.com/Weichwarenprojekt/license-reporter.git"},author:"Weichwarenprojekt <info@weichwarenprojekt.de> (https://weichwarenprojekt.de/)",contributors:["Tim Niederer <tim.niederer@weichwarenprojekt.de> (https://weichwarenprojekt.de/)"],license:"MIT",bugs:{url:"https://github.com/Weichwarenprojekt/license-reporter/issues"},homepage:"https://github.com/Weichwarenprojekt/license-reporter#readme",keywords:["license","release","MIT","CI","CD","CLI"],dependencies:{"@weichwarenprojekt/ts-importer":"^0.1.7",chalk:"^4.1.2",commander:"^11.1.0",glob:"^10.3.10"},devDependencies:{"@jest/globals":"^29.7.0","@types/glob":"^8.1.0","@types/node":"^20.10.4","@typescript-eslint/eslint-plugin":"^6.14.0","@weichwarenprojekt/configuration":"^0.2.0","@weichwarenprojekt/wersion":"^1.2.1",esbuild:"^0.19.9",eslint:"^8.56.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.0.1",jest:"^29.7.0",prettier:"^3.1.1","ts-jest":"^29.1.1","ts-node":"^10.9.2",typescript:"^5.3.3"}}});var G={};O(G,{SearchMode:()=>m,cli:()=>k,defaultConfiguration:()=>c,loadConfiguration:()=>h});module.exports=S(G);var P=require("commander");var s=f(require("path")),y=require("@weichwarenprojekt/ts-importer");function a(e){return e.replace(/\\/g,"/")}var x=f(require("chalk")),m=(o=>(o.recursive="recursive",o.flat="flat",o))(m||{}),c={addFolder:[],config:"./license-reporter.config.ts",defaultLicenseText:"No license text found.",force:!1,ignore:[],ignoreMissingUrl:!1,output:"./3rdpartylicenses.json",overrides:[],root:process.cwd(),search:"recursive"};async function h(e){let r=Object.assign(c,e);try{let o=r.config;s.default.isAbsolute(o)||(o=s.default.resolve(r.root,o));let n=(0,y.loadModule)(o);n.configuration||console.warn('The specified configuration does not export a "configuration"'),r=Object.assign(r,n.configuration)}catch{console.warn(x.default.yellow("Could not find a configuration file!"))}return L(r)}function L(e){return s.default.isAbsolute(e.root)||(e.root=s.default.resolve(process.cwd(),e.root)),e.root=a(e.root),s.default.isAbsolute(e.output)||(e.output=s.default.resolve(e.root,e.output)),e.output=a(e.output),e.ignore=e.ignore.map(r=>{let o=a(s.default.isAbsolute(r)?r:s.default.resolve(e.root,r));return o.endsWith("/")?o:`${o}/`}),e.addFolder=e.addFolder.map(r=>a(s.default.isAbsolute(r)?r:s.default.resolve(e.root,r))),e}var l=f(require("path")),g=f(require("fs"));var p=f(require("chalk")),b=require("os"),u=require("glob");async function C(e){let r=await h(e),o=A(r),n=U(r,o),t=J(r,n),i=B(r,t);q(r,t),!r.force&&!i&&process.exit(1)}function A(e){let r=V(e),o=[];for(let n of r)e.search==="recursive"?o.push(...(0,u.globSync)(`${n}/**/package.json`)):o.push(...(0,u.globSync)(`${n}/*/package.json`));return o=o.map(n=>a(n)),D(e,o)}function V(e){let r=e.search==="recursive"?l.default.resolve(e.root,"**/"):e.root;r=l.default.resolve(r,"node_modules"),r=a(r);let o=(0,u.globSync)(r,{ignore:"**/node_modules/**/node_modules/**"});o=o.filter(n=>{for(let t of e.ignore)if(n.includes(t))return!1;return!0}).map(n=>a(n)),o.push(...e.addFolder),console.log(`Found ${o.length} ${o.length===1?"folder":"folders"}...`);for(let n of o)console.log(`- ${n}`);return o}function D(e,r){let o=r.filter(t=>{for(let i of e.ignore)if(t.includes(i))return!1;return!0}),n=o.length>0?`${l.default.dirname(o[0])}/`:"";for(let t=1;t<o.length;)o[t].includes(n)?o.splice(t,1):(n=`${l.default.dirname(o[t])}/`,t++);return console.log(`Found ${o.length} ${o.length===1?"package":"packages"}. Start processing...`),o.sort(),o}function U(e,r){let o=new Map;for(let n of r)try{let t=W(e,n);o.set(t.name,t)}catch(t){console.error(`Could not extract license information from "${n}".`),console.error(t)}return o}function W(e,r){let o=JSON.parse(g.default.readFileSync(r,"utf-8")),n=a(l.default.dirname(r)),t={name:typeof o.name=="string"?o.name:"",url:typeof o.homepage=="string"?o.homepage:"",licenseName:typeof o.license=="string"?o.license:"",licenseText:"",version:typeof o.version=="string"?o.version:""};t.name||(t.name=l.default.basename(n));let i=typeof o.repository=="string"?o.repository:o.repository?.url;typeof i=="string"&&!t.url&&(t.url=i),t.url=t.url.replace(/^git\+/,""),t.url=t.url.replace(/^git:\/\//,"https://");let I={nocase:!0,cwd:n},_=(0,u.globSync)("licens*",I);_.length===0&&(_=(0,u.globSync)("copyin*",I));let v=_[0];return v&&(t.licenseText=g.default.readFileSync(l.default.resolve(n,v),"utf-8")),t.licenseText||(t.licenseText=e.defaultLicenseText),t}function J(e,r){for(let n of e.overrides){let t=n.name;if(!t)continue;let i=r.get(t);i?r.set(t,Object.assign(i,n)):r.set(t,{name:t,url:n.url??"",licenseName:n.licenseName??"",licenseText:n.licenseText??"",version:n.version??""})}let o=Array.from(r.values());return o.sort((n,t)=>n.name.localeCompare(t.name)),o}function B(e,r){let o=!0,n=(t,i)=>{o=!1,console.warn(p.default.yellow(`No "${p.default.bold(t)}" was found for the package "${p.default.bold(i)}". You can add "overrides" to the reporter configuration to manually complete the information of a package.`))};for(let t of r)!t.url&&!e.ignoreMissingUrl&&n("url",t.name),t.licenseName||n("licenseName",t.name),t.licenseText||n("licenseText",t.name),t.version||n("version",t.name);return o}function q(e,r){g.default.mkdirSync(l.default.dirname(e.output),{recursive:!0}),g.default.writeFileSync(e.output,`${JSON.stringify(r,null,4)}${b.EOL}`),console.log(p.default.green(`Finished. Results were written to "${p.default.bold(e.output)}"`))}var E=` __        ______    _     _                           ____                       _
 \\ \\      / /  _ \\  | |   (_) ___ ___ _ __  ___  ___  |  _ \\ ___ _ __   ___  _ __| |_ ___ _ __
  \\ \\ /\\ / /| |_) | | |   | |/ __/ _ \\ '_ \\/ __|/ _ \\ | |_) / _ \\ '_ \\ / _ \\| '__| __/ _ \\ '__|
   \\ V  V / |  __/  | |___| | (_|  __/ | | \\__ \\  __/ |  _ <  __/ |_) | (_) | |  | ||  __/ |
    \\_/\\_/  |_|     |_____|_|\\___\\___|_| |_|___/\\___| |_| \\_\\___| .__/ \\___/|_|   \\__\\___|_|
                                                                |_|`,Y=new P.Command;async function k(e){let r=j();await Y.version(r.version).description(`${E}
${r.description}`).action(C).option("--config <value>","The path to the configuration file.",c.config).option("--defaultLicenseText <value>","The default license text that is used if the tool can't find a license text for a package.",c.defaultLicenseText).option("--force","Forces a good exit.",c.force).option("--ignoreMissingUrl","If true, license-reporter will not fail and warn you because of missing urls.",c.ignoreMissingUrl).option("--output <value>","The path to the output file.",c.output).option("--root <value>","The path to the root directory.",c.root).option("--search <value>",'The search mode. Can be "flat" or "recursive".',c.search).parseAsync(e)}k(process.argv).catch(e=>{console.error("Something unexpected happened!"),console.error(e),process.exit(1)});0&&(module.exports={SearchMode,cli,defaultConfiguration,loadConfiguration});
